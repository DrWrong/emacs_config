;; Object concurrency/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "concurrency/"
  :tables
  (list
    (semanticdb-table "base.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"Base Execution Pool.\"\"\"" code nil nil [25 51])
            ("__future__" include nil nil [52 108])
            ("logging" include nil nil [110 124])
            ("os" include nil nil [125 134])
            ("sys" include nil nil [135 145])
            ("billiard.einfo" include nil nil [147 187])
            ("billiard.exceptions" include nil nil [188 235])
            ("kombu.utils.encoding" include nil nil [236 278])
            ("celery.exceptions" include nil nil [280 341])
            ("celery.five" include nil nil [342 384])
            ("celery.utils" include nil nil [385 416])
            ("celery.utils.text" include nil nil [417 455])
            ("celery.utils.log" include nil nil [456 495])
            ("__all__" variable nil nil [497 535])
            ("logger" variable nil nil [537 571])
            ("apply_target" function
               (:documentation "Apply function within pool context."
                :arguments 
                  ( ("target" variable nil (reparse-symbol function_parameters) [591 597])
                    ("args" variable nil (reparse-symbol function_parameters) [599 603])
                    ("kwargs" variable nil (reparse-symbol function_parameters) [608 614])
                    ("callback" variable nil (reparse-symbol function_parameters) [619 627])
                    ("accept_callback" variable nil (reparse-symbol function_parameters) [651 666])
                    ("pid" variable nil (reparse-symbol function_parameters) [673 676])
                    ("getpid" variable nil (reparse-symbol function_parameters) [683 689])
                    ("propagate" variable nil (reparse-symbol function_parameters) [718 727])
                    ("monotonic" variable nil (reparse-symbol function_parameters) [732 741])
                    ("_" variable nil (reparse-symbol function_parameters) [753 756]))                  )
                nil [574 1314])
            ("BasePool" type
               (:documentation "Task pool."
                :superclasses ("object")
                :members 
                  ( ("RUN" variable nil (reparse-symbol indented_block_body) [1366 1375])
                    ("CLOSE" variable nil (reparse-symbol indented_block_body) [1380 1391])
                    ("TERMINATE" variable nil (reparse-symbol indented_block_body) [1396 1411])
                    ("Timer" variable nil (reparse-symbol indented_block_body) [1417 1437])
                    ("signal_safe" variable nil (reparse-symbol indented_block_body) [1527 1545])
                    ("is_green" variable nil (reparse-symbol indented_block_body) [1594 1610])
                    ("_state" variable nil (reparse-symbol indented_block_body) [1616 1629])
                    ("_pool" variable nil (reparse-symbol indented_block_body) [1634 1646])
                    ("_does_debug" variable nil (reparse-symbol indented_block_body) [1651 1669])
                    ("uses_semaphore" variable nil (reparse-symbol indented_block_body) [1716 1738])
                    ("task_join_will_block" variable nil (reparse-symbol indented_block_body) [1744 1771])
                    ("body_can_be_buffer" variable nil (reparse-symbol indented_block_body) [1776 1802])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1946 1964])
                            ("self" variable nil (reparse-symbol indented_block_body) [1973 1997])
                            ("self" variable nil (reparse-symbol indented_block_body) [2006 2028])
                            ("self" variable nil (reparse-symbol indented_block_body) [2037 2073])
                            ("self" variable nil (reparse-symbol indented_block_body) [2082 2128])
                            ("self" variable nil (reparse-symbol indented_block_body) [2137 2151]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1821 1825])
                            ("limit" variable nil (reparse-symbol function_parameters) [1827 1832])
                            ("putlocks" variable nil (reparse-symbol function_parameters) [1839 1847])
                            ("forking_enable" variable nil (reparse-symbol function_parameters) [1854 1868])
                            ("callbacks_propagate" variable nil (reparse-symbol function_parameters) [1892 1911])
                            ("app" variable nil (reparse-symbol function_parameters) [1916 1919])
                            ("options" variable nil (reparse-symbol function_parameters) [1926 1935]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1808 2152])
                    ("on_start" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2170 2174]))                          )
                        (reparse-symbol indented_block_body) [2157 2190])
                    ("did_start_ok" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2212 2216]))                          )
                        (reparse-symbol indented_block_body) [2195 2239])
                    ("flush" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2254 2258]))                          )
                        (reparse-symbol indented_block_body) [2244 2274])
                    ("on_stop" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2291 2295]))                          )
                        (reparse-symbol indented_block_body) [2279 2311])
                    ("register_with_event_loop" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2345 2349])
                            ("loop" variable nil (reparse-symbol function_parameters) [2351 2355]))                          )
                        (reparse-symbol indented_block_body) [2316 2371])
                    ("on_apply" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2389 2393])
                            ("args" variable nil (reparse-symbol function_parameters) [2395 2400])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [2402 2410]))                          )
                        (reparse-symbol indented_block_body) [2376 2426])
                    ("on_terminate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2448 2452]))                          )
                        (reparse-symbol indented_block_body) [2431 2468])
                    ("on_soft_timeout" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2493 2497])
                            ("job" variable nil (reparse-symbol function_parameters) [2499 2502]))                          )
                        (reparse-symbol indented_block_body) [2473 2518])
                    ("on_hard_timeout" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2543 2547])
                            ("job" variable nil (reparse-symbol function_parameters) [2549 2552]))                          )
                        (reparse-symbol indented_block_body) [2523 2568])
                    ("maintain_pool" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2591 2595])
                            ("args" variable nil (reparse-symbol function_parameters) [2597 2602])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [2604 2612]))                          )
                        (reparse-symbol indented_block_body) [2573 2628])
                    ("terminate_job" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2651 2655])
                            ("pid" variable nil (reparse-symbol function_parameters) [2657 2660])
                            ("signal" variable nil (reparse-symbol function_parameters) [2662 2668]))                          )
                        (reparse-symbol indented_block_body) [2633 2777])
                    ("restart" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2794 2798]))                          )
                        (reparse-symbol indented_block_body) [2782 2901])
                    ("stop" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2915 2919]))                          )
                        (reparse-symbol indented_block_body) [2906 2982])
                    ("terminate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3001 3005]))                          )
                        (reparse-symbol indented_block_body) [2987 3073])
                    ("start" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3088 3092]))                          )
                        (reparse-symbol indented_block_body) [3078 3212])
                    ("close" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3227 3231]))                          )
                        (reparse-symbol indented_block_body) [3217 3291])
                    ("on_close" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3309 3313]))                          )
                        (reparse-symbol indented_block_body) [3296 3329])
                    ("apply_async" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3350 3354])
                            ("target" variable nil (reparse-symbol function_parameters) [3356 3362])
                            ("args" variable nil (reparse-symbol function_parameters) [3364 3368])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [3373 3379])
                            ("options" variable nil (reparse-symbol function_parameters) [3384 3393]))                          
                        :documentation "Equivalent of the :func:`apply` built-in function.

        Callbacks should optimally return as soon as possible since
        otherwise the thread which handles the result will get blocked.
        ")
                        (reparse-symbol indented_block_body) [3334 4056])
                    ("_get_info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4075 4079]))                          )
                        (reparse-symbol indented_block_body) [4061 4152])
                    ("info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4180 4184]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4157 4219])
                    ("active" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4249 4253]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4224 4295])
                    ("num_processes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4332 4336]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4300 4365]))                  
                :type "class")
                nil [1316 4365]))          
      :file "base.py"
      :pointmax 4365
      :fsize 4364
      :lastmodtime '(22764 51938 0 0)
      :unmatched-syntax '((INDENT_BLOCK 1292 . 1314) (NEWLINE 1291 . 1292) (COLON 1290 . 1291) (ELSE 1286 . 1290) (INDENT_BLOCK 1095 . 1282) (NEWLINE 1094 . 1095) (COLON 1093 . 1094) (TRY 887 . 890) (AS 1087 . 1089)))
    (semanticdb-table "prefork.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"Prefork execution pool.

Pool implementation using :mod:`multiprocessing`.
\"\"\"" code nil nil [25 106])
            ("__future__" include nil nil [107 163])
            ("os" include nil nil [165 174])
            ("billiard.common" include nil nil [176 231])
            ("billiard" include nil nil [232 267])
            ("billiard.pool" include nil nil [268 326])
            ("celery" include nil nil [328 356])
            ("celery" include nil nil [357 383])
            ("celery._state" include nil nil [384 452])
            ("celery.app" include nil nil [453 481])
            ("celery.concurrency.base" include nil nil [482 526])
            ("celery.five" include nil nil [527 556])
            ("celery.utils.functional" include nil nil [557 597])
            ("celery.utils.log" include nil nil [598 637])
            ("AsynPool" include nil nil [654 669])
            ("__all__" variable nil nil [671 738])
            ("WORKER_SIGRESET" variable nil nil [797 876])
            ("if" code nil nil [936 1042])
            ("logger" variable nil nil [1043 1072])
            ("warning, debug" code nil nil [1073 1118])
            ("process_initializer" function
               (:documentation "Pool child process initializer.

    Initialize the child pool process to ensure the correct
    app instance is used and things like logging works.
    "
                :arguments 
                  ( ("app" variable nil (reparse-symbol function_parameters) [1145 1148])
                    ("hostname" variable nil (reparse-symbol function_parameters) [1150 1158]))                  )
                nil [1121 2900])
            ("process_destructor" function
               (:documentation "Pool child process destructor.

    Dispatch the :signal:`worker_process_shutdown` signal.
    "
                :arguments 
                  ( ("pid" variable nil (reparse-symbol function_parameters) [2925 2928])
                    ("exitcode" variable nil (reparse-symbol function_parameters) [2930 2938]))                  )
                nil [2902 3144])
            ("TaskPool" type
               (:documentation "Multiprocessing Pool implementation."
                :superclasses ("BasePool")
                :members 
                  ( ("Pool" variable nil (reparse-symbol indented_block_body) [3224 3239])
                    ("BlockingPool" variable nil (reparse-symbol indented_block_body) [3244 3271])
                    ("uses_semaphore" variable nil (reparse-symbol indented_block_body) [3277 3298])
                    ("write_stats" variable nil (reparse-symbol indented_block_body) [3303 3321])
                    ("on_start" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3340 3344]))                          )
                        (reparse-symbol indented_block_body) [3327 4107])
                    ("restart" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4124 4128]))                          )
                        (reparse-symbol indented_block_body) [4112 4197])
                    ("did_start_ok" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4219 4223]))                          )
                        (reparse-symbol indented_block_body) [4202 4267])
                    ("register_with_event_loop" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4301 4305])
                            ("loop" variable nil (reparse-symbol function_parameters) [4307 4311]))                          )
                        (reparse-symbol indented_block_body) [4272 4456])
                    ("on_stop" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4473 4477]))                          
                        :documentation "Gracefully stop the pool.")
                        (reparse-symbol indented_block_body) [4461 4684])
                    ("on_terminate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4706 4710]))                          
                        :documentation "Force terminate the pool.")
                        (reparse-symbol indented_block_body) [4689 4853])
                    ("on_close" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4871 4875]))                          )
                        (reparse-symbol indented_block_body) [4858 4973])
                    ("_get_info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4992 4996]))                          )
                        (reparse-symbol indented_block_body) [4978 5508])
                    ("num_processes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5545 5549]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [5513 5589]))                  
                :type "class")
                nil [3146 5589]))          
      :file "prefork.py"
      :pointmax 5589
      :fsize 5588
      :lastmodtime '(22764 51938 0 0)
      :unmatched-syntax '((FROM 639 . 643) (PERIOD 644 . 645)))
    (semanticdb-table "AsynPool.py"
      :file "AsynPool.py"
      :fsize 48565
      :lastmodtime '(22764 51938 0 0)))
  :file "!Users!drwrong!openProject!celery!celery!concurrency!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
